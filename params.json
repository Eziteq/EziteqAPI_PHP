{"name":"Eziteq API - PHP Wrapper","tagline":"PHP API Wrapper","body":"[![Build Status](https://secure.travis-ci.org/Eziteq/EziteqAPI_PHP.png?branch=master)](http://travis-ci.org/Eziteq/EziteqAPI_PHP)\r\n\r\nA PHP 5.3+ wrapper for Eziteq API requests.\r\n\r\n##Installation\r\nYou can install **EziteqAPI_PHP** via composer or by downloading the source.\r\n\r\n#### Via Composer:\r\n**EziteqAPI_PHP** is available on the Packagist as the [`eziteq/eziteq-api_php`](https://packagist.org/packages/eziteq/eziteq-api_php) package.\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"eziteq/eziteq-api_php\": \"{version}\"\r\n    }\r\n}\r\n```\r\n\r\n\r\n#### Via ZIP file:\r\n[Click here to download the source (.zip)](https://github.com/eziteq/EziteqAPI_PHP/zipball/master) which includes all dependencies.\r\n\r\nOnce you download the library, move the EziteqAPI_PHP folder to your project directory and then include the wrapper file:\r\n\r\n\trequire '/path/to/EziteqAPI_PHP/EziteqAPI.php';\r\n\t\r\nand you're good to go!\r\n\r\n##Requirements\r\n\r\nPHP 5.3.9 (or higher) is required. If you have access, PHP 5.4 (or higher) is *highly* recommended for its performance improvements.\r\n\r\n### Documentation\r\n\r\nContact Eziteq for a API access and documentation.\r\n\r\n###Example usage\r\n\r\n```php\r\n<?php\r\n\r\nuse EziteqAPI_PHP\\EziteqAPI;\r\n\r\n    // Make sure composer dependencies have been installed\r\n    require __DIR__ . '/vendor/autoload.php';\r\n\t\r\n\t//Init and authenticate with Api key\r\n\t$eziteq = EziteqAPI::init(array(\r\n\t\t'apiKey' => 'a84fhgncmc432mgsa31' // Api key from Eziteq\r\n\t));\r\n\r\n\t//Init and authenticate with OAuth2\r\n\t$eziteq = EziteqAPI::initOAuth2(array(\r\n\t\t'clientId' => 14513528982,\r\n\t\t'secret' => 'b3f89ee80ca90adf9fe75535c974a400',\r\n\t\t'redirect_uri' => 'https://my.app/login'\r\n\t));\r\n\t\r\n\tif($eziteq->authenticate()) {\r\n\t\t\r\n\t\t// Get subscriptions\r\n\t\t$subscriptions = $eziteq->getSubscriptions();\r\n\t\t\r\n\t\t// Get specific customer\r\n\t\t$customer = $eziteq->getCustomer(array(\r\n\t\t\t'customerId' => 5432\r\n\t\t));\r\n\t\t\r\n\t} else \r\n\t\tthrow new Exception($eziteq->getMessage(), $eziteq->getCode()));\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}